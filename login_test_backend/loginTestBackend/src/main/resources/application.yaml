spring:
  application:
    name: loginTestBackend

  sql:
    init:
      mode: always

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5434/loginTest}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:example}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 1
      maximum-pool-size: 20
      auto-commit: false
      pool-name: HikariPool-1
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000

  data:
    redis:
      # Local dev default; in Docker this is overridden to 'redis' by envs provided in compose
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:example}
      database: ${SPRING_DATA_REDIS_DATABASE:1}

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 12MB

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            issuer-uri: https://accounts.google.com

server:
  port: 8081

app:
  jwt:
    secret: ${APP_JWT_SECRET}
    access-token-ttl-mins: 1440
    issuer: loginTestBackend